//
// BeerMethod.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct BeerMethod: Codable, JSONEncodable {

    public var mashTemp: [BeerMethodMashTemp]?
    public var fermentation: BeerMethodFermentation?
    public var twist: String?

    public init(mashTemp: [BeerMethodMashTemp]? = nil, fermentation: BeerMethodFermentation? = nil, twist: String? = nil) {
        self.mashTemp = mashTemp
        self.fermentation = fermentation
        self.twist = twist
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case mashTemp = "mash_temp"
        case fermentation
        case twist
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(mashTemp, forKey: .mashTemp)
        try container.encodeIfPresent(fermentation, forKey: .fermentation)
        try container.encodeIfPresent(twist, forKey: .twist)
    }
}

