//
// ErrorBeer.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct ErrorBeer: Codable, JSONEncodable {

    public var statusCode: Double
    public var error: String
    public var message: String
    public var data: [ErrorBeerData]?

    public init(statusCode: Double, error: String, message: String, data: [ErrorBeerData]? = nil) {
        self.statusCode = statusCode
        self.error = error
        self.message = message
        self.data = data
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case statusCode
        case error
        case message
        case data
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encode(statusCode, forKey: .statusCode)
        try container.encode(error, forKey: .error)
        try container.encode(message, forKey: .message)
        try container.encodeIfPresent(data, forKey: .data)
    }
}

